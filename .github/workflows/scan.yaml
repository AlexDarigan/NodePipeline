name: Scan

on:
 workflow_call:

jobs:

  code-quality:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        # Disabling shallow clones is recommended for improving the relevancy of reporting
        fetch-depth: 0
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v5.1.0
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

    - name: Check SonarQube Quality Gate
      id: sonarqube-quality-gate
      uses: sonarsource/sonarqube-quality-gate-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    - name: Check Code Coverage
      if: steps.sonarqube-quality-gate.outputs.qualityGateStatus == 'OK'
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      run: |
        COVERAGE=$(curl -s -u "${SONAR_TOKEN}:" "${SONAR_HOST_URL}/api/metrics/component?component=${{ github.repository }}&metricKeys=coverage" | jq -r '.component.measures[0].value')
        echo "Code Coverage: $COVERAGE%"
        if (( $(echo "$COVERAGE < 80" | bc -l) )); then
          echo "Code coverage is below 80%. Failing the build."
          exit 1
        fi

  # https://github.com/marketplace/actions/aikido-security-github-action
  sast:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Static Application Security Testing
      uses: AikidoSec/github-actions-workflow@v1.0.13
      with:
        secret-key: ${{ secrets.AIKIDO_SECRET_KEY }}
        fail-on-timeout: true
        fail-on-sast-scan: false
        minimum-severity: 'CRITICAL'
        timeout-seconds: 180

  sca:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Software Composition Analysis
      uses: AikidoSec/github-actions-workflow@v1.0.13
      with:
        secret-key: ${{ secrets.AIKIDO_SECRET_KEY }}
        fail-on-timeout: true
        fail-on-dependency-scan: true
        minimum-severity: 'CRITICAL'
        timeout-seconds: 180

  sca-owasp:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: dependency check
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: 'node-sample'
          path: '.'
          format: 'HTML'
          out: 'reports' # this is the default, no need to specify unless you wish to override it
          args: >
            --failOnCVSS 7
            --enableRetired
  
